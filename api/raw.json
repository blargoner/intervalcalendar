{"majorversion": 2, "filemap": {"intervalcalendar.js": {"classlist": ["YAHOO.BLARGON.widget.IntervalCalendar"], "name": "intervalcalendar.js", "module": "intervalcalendar"}}, "modules": {"intervalcalendar": {"description": "IntervalCalendar is an extension of the CalendarGroup designed specifically\nfor the selection of an interval of dates.", "submodules": [], "classlist": ["YAHOO.BLARGON.widget.IntervalCalendar"], "filelist": ["intervalcalendar.js"], "subdata": {}, "requires": "yahoo, dom, event, calendar", "name": "intervalcalendar"}}, "classmap": {"YAHOO.BLARGON.widget.IntervalCalendar": {"name": "YAHOO.BLARGON.widget.IntervalCalendar", "constructors": [{"params": [{"type": "String | HTMLElement", "name": "container", "description": " The id of, or reference to, an HTML DIV element which will contain the control."}, {"type": "Object", "name": "cfg", "description": " optional The initial configuration options for the control."}], "description": "IntervalCalendar is an extension of the CalendarGroup designed specifically\nfor the selection of an interval of dates, as opposed to a single date or\nan arbitrary collection of dates.\n<p>\n<b>Note:</b> When using IntervalCalendar, dates should not be selected or\ndeselected using the 'selected' configuration property or any of the\nCalendarGroup select/deselect methods. Doing so will corrupt the internal\nstate of the control. Instead, use the provided methods setInterval and\nresetInterval.\n</p>\n<p>\nSimilarly, when handling select/deselect/etc. events, do not use the\ndates passed in the arguments to attempt to keep track of the currently\nselected interval. Instead, use getInterval.\n</p>"}], "namespace": "YAHOO.BLARGON.widget", "module": "intervalcalendar", "methods": {"getInterval": {"return": {"type": "Array", "description": "An empty array if no interval is selected; otherwise an array\nconsisting of two JavaScript Date objects, the first being the\nlower date of the interval and the second being the upper date."}, "description": "Returns the lower and upper dates of the currently selected interval, if an\ninterval is selected.", "guessedname": "getInterval", "guessedtype": "function"}, "resetInterval": {"description": "Resets the currently selected interval.\n<p>\n<b>Note:</b> The render method must be called after resetting the interval\nfor any changes to be seen.\n</p>", "guessedname": "resetInterval", "guessedtype": "function"}, "setInterval": {"params": [{"type": "Date", "name": "d1", "description": " A JavaScript Date object."}, {"type": "Date", "name": "d2", "description": " A JavaScript Date object."}], "description": "Sets the currently selected interval by specifying the lower and upper\ndates of the interval (in either order).\n<p>\n<b>Note:</b> The render method must be called after setting the interval\nfor any changes to be seen.\n</p>", "guessedname": "setInterval", "guessedtype": "function"}, "_intervalOnBeforeSelect": {"private": "", "description": "Handles beforeSelect event.", "guessedname": "_intervalOnBeforeSelect", "guessedtype": "function"}, "_dateString": {"return": {"type": "String", "description": "The string representation of the JavaScript Date object."}, "description": "Returns a string representation of a date which takes into account\nrelevant localization settings and is suitable for use with\nYAHOO.widget.CalendarGroup and YAHOO.widget.Calendar methods.", "private": "", "params": [{"type": "Date", "name": "d", "description": " The JavaScript Date object of which to obtain a string representation."}], "guessedname": "_dateString", "guessedtype": "function"}, "_intervalOnBeforeDeselect": {"private": "", "description": "Handles beforeDeselect event.", "guessedname": "_intervalOnBeforeDeselect", "guessedtype": "function"}, "_intervalOnDeselect": {"private": "", "description": "Handles deselectEvent event.", "guessedname": "_intervalOnDeselect", "guessedtype": "function"}, "_intervalOnSelect": {"private": "", "description": "Handles selectEvent event.", "guessedname": "_intervalOnSelect", "guessedtype": "function"}, "_dateIntervalString": {"return": {"type": "String", "description": "The string representing the interval of dates between and\nincluding the lower and upper dates."}, "description": "Given a lower and upper date, returns a string representing the interval\nof dates between and including them, which takes into account relevant\nlocalization settings and is suitable for use with\nYAHOO.widget.CalendarGroup and YAHOO.widget.Calendar methods.\n<p>\n<b>Note:</b> No internal checking is done to ensure that the lower date\nis in fact less than or equal to the upper date.\n</p>", "private": "", "params": [{"type": "Date", "name": "l", "description": " The lower date of the interval, as a JavaScript Date object."}, {"type": "Date", "name": "u", "description": " The upper date of the interval, as a JavaScript Date object."}], "guessedname": "_dateIntervalString", "guessedtype": "function"}}, "extends": "YAHOO.widget.CalendarGroup", "superclass": "YAHOO.widget.CalendarGroup", "file": "intervalcalendar.js", "shortname": "IntervalCalendar", "properties": {"IntervalCalendar._DEFAULT_CONFIG": {"description": "Default configuration parameters.", "private": "", "static": "", "guessedname": "_DEFAULT_CONFIG", "guessedtype": "property", "type": "Object", "final": ""}, "_iState": {"guessedname": "_iState", "type": "Number", "description": "The interval state, which counts the number of interval endpoints that have\nbeen selected (0 to 2).", "private": "", "guessedtype": "property"}}, "description": "IntervalCalendar is an extension of the CalendarGroup designed specifically\nfor the selection of an interval of dates, as opposed to a single date or\nan arbitrary collection of dates.\n<p>\n<b>Note:</b> When using IntervalCalendar, dates should not be selected or\ndeselected using the 'selected' configuration property or any of the\nCalendarGroup select/deselect methods. Doing so will corrupt the internal\nstate of the control. Instead, use the provided methods setInterval and\nresetInterval.\n</p>\n<p>\nSimilarly, when handling select/deselect/etc. events, do not use the\ndates passed in the arguments to attempt to keep track of the currently\nselected interval. Instead, use getInterval.\n</p>"}}, "version": "0.1", "namespaces": ["YAHOO.BLARGON.widget"]}